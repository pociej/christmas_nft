"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Akord = void 0;
const akord_api_1 = require("./api/akord-api");
const crypto_1 = require("@akord/crypto");
const constants_1 = require("./constants");
const logger_1 = require("./logger");
const memo_1 = require("./core/memo");
const folder_1 = require("./core/folder");
const membership_1 = require("./core/membership");
const vault_1 = require("./core/vault");
const stack_1 = require("./core/stack");
const note_1 = require("./core/note");
const manifest_1 = require("./core/manifest");
const profile_1 = require("./core/profile");
const cacheable_1 = require("./types/cacheable");
const file_1 = require("./core/file");
const batch_1 = require("./core/batch");
const contract_1 = require("./core/contract");
const nft_1 = require("./core/nft");
class Akord {
    /**
     * @param  {ClientConfig} config
     * @param  {Wallet} [wallet]
     */
    constructor(wallet, config = {}) {
        logger_1.Logger.debug = config.debug;
        cacheable_1.CacheBusters.cache = config.cache;
        crypto_1.Crypto.configure({ wallet: wallet });
        this.api = config.api ? config.api : new akord_api_1.AkordApi(config);
        this.vault = new vault_1.VaultService(wallet, this.api);
        this.memo = new memo_1.MemoService(wallet, this.api);
        this.folder = new folder_1.FolderService(wallet, this.api);
        this.stack = new stack_1.StackService(wallet, this.api);
        this.file = new file_1.FileService(wallet, this.api);
        this.note = new note_1.NoteService(wallet, this.api);
        this.manifest = new manifest_1.ManifestService(wallet, this.api);
        this.membership = new membership_1.MembershipService(wallet, this.api);
        this.profile = new profile_1.ProfileService(wallet, this.api);
        this.batch = new batch_1.BatchService(wallet, this.api);
        this.contract = new contract_1.ContractService(wallet, this.api);
        this.nft = new nft_1.NFTService(wallet, this.api);
    }
}
exports.Akord = Akord;
Akord.reactionEmoji = constants_1.reactionEmoji;
