import { Api } from "./api/api";
import { ClientConfig } from "./config";
import { Wallet } from "@akord/crypto";
import { reactionEmoji } from "./constants";
import { MemoService } from "./core/memo";
import { FolderService } from "./core/folder";
import { MembershipService } from "./core/membership";
import { VaultService } from "./core/vault";
import { StackService } from "./core/stack";
import { NoteService } from "./core/note";
import { ManifestService } from "./core/manifest";
import { ProfileService } from "./core/profile";
import { FileService } from "./core/file";
import { BatchService } from "./core/batch";
import { ContractService } from "./core/contract";
import { NFTService } from "./core/nft";
export declare class Akord {
    static readonly reactionEmoji: typeof reactionEmoji;
    api: Api;
    memo: MemoService;
    folder: FolderService;
    membership: MembershipService;
    vault: VaultService;
    stack: StackService;
    file: FileService;
    note: NoteService;
    manifest: ManifestService;
    profile: ProfileService;
    batch: BatchService;
    contract: ContractService;
    nft: NFTService;
    static init: (wallet: Wallet, config?: ClientConfig) => Promise<Akord>;
    /**
     * @param  {ClientConfig} config
     * @param  {Wallet} [wallet]
     */
    constructor(wallet?: Wallet, config?: ClientConfig);
}
