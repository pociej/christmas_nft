"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.throwError = void 0;
const bad_request_1 = require("./bad-request");
const forbidden_1 = require("./forbidden");
const internal_error_1 = require("./internal-error");
const not_found_1 = require("./not-found");
const too_many_requests_1 = require("./too-many-requests");
const unauthorized_1 = require("./unauthorized");
const throwError = (status, message, error) => {
    switch (status) {
        case 400:
            throw new bad_request_1.BadRequest(message, error);
        case 401:
            throw new unauthorized_1.Unauthorized(message, error);
        case 403:
            throw new forbidden_1.Forbidden(message, error);
        case 404:
            throw new not_found_1.NotFound(message, error);
        case 429:
            throw new too_many_requests_1.TooManyRequests(message, error);
        default:
            throw new internal_error_1.InternalError("Internal error. Please try again or contact Akord support.", error);
    }
};
exports.throwError = throwError;
