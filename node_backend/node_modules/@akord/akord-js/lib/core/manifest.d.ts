import { NodeService } from "./node";
import { Stack, nodeType } from "../types/node";
import { StackService } from "./stack";
import { FolderService } from "./folder";
export declare const CONTENT_TYPE = "application/x.arweave-manifest+json";
export declare const FILE_TYPE = "application/json";
declare class ManifestService extends NodeService<Stack> {
    stackService: StackService;
    folderService: FolderService;
    objectType: nodeType;
    NodeType: typeof Stack;
    /**
     * @returns Promise with vault manifest node
     */
    get(vaultId: string): Promise<Stack>;
    /**
     * Get manifest version by index, return the latest version by default
     * @param  {string} vaultId
     * @param  {number} [index] manifest version index
     * @returns Promise with vault manifest JSON data
     */
    getVersion(vaultId: string, index?: number): Promise<JSON>;
    /**
     * @param  {string} vaultId
     * @param  {JSON} manifest manifest JSON
     * @returns Promise with corresponding transaction id
     */
    generate(vaultId: string, manifest?: JSON | Object): Promise<{
        transactionId: string;
        object: Stack;
    }>;
    /**
     *
     * @returns manifest in json format
     */
    private renderManifestJSON;
}
export { ManifestService };
