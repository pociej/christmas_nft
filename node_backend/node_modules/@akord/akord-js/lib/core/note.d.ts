import { NodeCreateOptions, NodeService } from "./node";
import { Stack, nodeType } from "../types/node";
import { StackService } from "./stack";
import { Paginated } from "../types/paginated";
declare class NoteService extends NodeService<Stack> {
    stackService: StackService;
    objectType: nodeType;
    NodeType: typeof Stack;
    defaultCreateOptions: NoteCreateOptions;
    /**
     * Get note version by index, return the latest version by default
     * @param  {string} noteId
     * @param  {number} [index] note version index
     * @returns Promise with version name & data string
     */
    getVersion(noteId: string, index?: number): Promise<{
        name: string;
        data: string;
    }>;
    /**
     * @param  {string} vaultId
     * @returns Promise with all notes within given vault
     */
    list(vaultId: string, options?: import("../types/query-options").ListOptions): Promise<Paginated<Stack>>;
    /**
     * @param  {string} vaultId
     * @param  {string} content note content, ex: stringified JSON
     * @param  {string} name note name
     * @param  {NoteCreateOptions} [options] parent id, mime type, etc.
     * @returns Promise with new note id & corresponding transaction id
     */
    create(vaultId: string, content: string, name: string, options?: NoteCreateOptions): Promise<NoteCreateResult>;
    /**
     * @param  {string} noteId
     * @param  {string} content note content, ex: stringified JSON
     * @param  {string} name note name
     * @param  {NoteOptions} [options] parent id, mime type, etc.
     * @returns Promise with corresponding transaction id
     */
    uploadRevision(noteId: string, content: string, name: string, options?: NoteOptions): Promise<NoteUpdateResult>;
    private isValidNoteType;
}
declare type NoteCreateResult = {
    noteId: string;
    transactionId: string;
    object: Stack;
};
declare type NoteUpdateResult = {
    transactionId: string;
    object: Stack;
};
export declare type NoteOptions = {
    mimeType?: string;
};
export declare type NoteCreateOptions = NodeCreateOptions & NoteOptions;
export { NoteService };
