{"version":3,"file":"rx-storage-lokijs.js","names":["_rxStorageInstanceLoki","require","_lokijsHelper","_rxStorageHelper","RxStorageLoki","exports","databaseSettings","name","RX_STORAGE_NAME_LOKIJS","leaderElectorByLokiDbName","Map","_proto","prototype","createStorageInstance","params","ensureRxStorageInstanceParamsAreCorrect","createLokiStorageInstance","getRxStorageLoki","storage"],"sources":["../../../../src/plugins/storage-lokijs/rx-storage-lokijs.ts"],"sourcesContent":["import type {\n    LokiDatabaseSettings,\n    LokiSettings,\n    LokiStorageInternals,\n    RxStorage,\n    RxStorageInstanceCreationParams\n} from '../../types/index.d.ts';\nimport {\n    createLokiStorageInstance,\n    RxStorageInstanceLoki\n} from './rx-storage-instance-loki.ts';\nimport { RX_STORAGE_NAME_LOKIJS } from './lokijs-helper.ts';\nimport type { LeaderElector } from 'broadcast-channel';\n\nimport { ensureRxStorageInstanceParamsAreCorrect } from '../../rx-storage-helper.ts';\n\nexport class RxStorageLoki implements RxStorage<LokiStorageInternals, LokiSettings> {\n    public name = RX_STORAGE_NAME_LOKIJS;\n\n    /**\n     * Create one leader elector by db name.\n     * This is done inside of the storage, not globally\n     * to make it easier to test multi-tab behavior.\n     */\n    public leaderElectorByLokiDbName: Map<string, {\n        leaderElector: LeaderElector;\n        /**\n         * Count the instances that currently use the elector.\n         * If is goes to zero again, the elector can be closed.\n         */\n        instancesCount: number;\n    }> = new Map();\n\n    constructor(\n        public databaseSettings: LokiDatabaseSettings\n    ) { }\n\n    public createStorageInstance<RxDocType>(\n        params: RxStorageInstanceCreationParams<RxDocType, LokiSettings>\n    ): Promise<RxStorageInstanceLoki<RxDocType>> {\n        ensureRxStorageInstanceParamsAreCorrect(params);\n        return createLokiStorageInstance(this, params, this.databaseSettings);\n    }\n}\n\nexport function getRxStorageLoki(\n    databaseSettings: LokiDatabaseSettings = {}\n): RxStorageLoki {\n    const storage = new RxStorageLoki(databaseSettings);\n    return storage;\n}\n"],"mappings":";;;;;;;AAOA,IAAAA,sBAAA,GAAAC,OAAA;AAIA,IAAAC,aAAA,GAAAD,OAAA;AAGA,IAAAE,gBAAA,GAAAF,OAAA;AAAqF,IAExEG,aAAa,GAAAC,OAAA,CAAAD,aAAA;EAGtB;AACJ;AACA;AACA;AACA;;EAUI,SAAAA,cACWE,gBAAsC,EAC/C;IAAA,KAlBKC,IAAI,GAAGC,oCAAsB;IAAA,KAO7BC,yBAAyB,GAO3B,IAAIC,GAAG,CAAC,CAAC;IAAA,KAGHJ,gBAAsC,GAAtCA,gBAAsC;EAC7C;EAAC,IAAAK,MAAA,GAAAP,aAAA,CAAAQ,SAAA;EAAAD,MAAA,CAEEE,qBAAqB,GAA5B,SAAAA,sBACIC,MAAgE,EACvB;IACzC,IAAAC,wDAAuC,EAACD,MAAM,CAAC;IAC/C,OAAO,IAAAE,gDAAyB,EAAC,IAAI,EAAEF,MAAM,EAAE,IAAI,CAACR,gBAAgB,CAAC;EACzE,CAAC;EAAA,OAAAF,aAAA;AAAA;AAGE,SAASa,gBAAgBA,CAC5BX,gBAAsC,GAAG,CAAC,CAAC,EAC9B;EACb,IAAMY,OAAO,GAAG,IAAId,aAAa,CAACE,gBAAgB,CAAC;EACnD,OAAOY,OAAO;AAClB"}