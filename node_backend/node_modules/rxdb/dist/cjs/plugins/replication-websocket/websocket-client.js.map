{"version":3,"file":"websocket-client.js","names":["_index","require","_reconnectingWebsocket","_interopRequireDefault","_isomorphicWs","_index2","_rxjs","_rxError","ensureIsWebsocket","w","is","CLOSING","console","dir","Error","createWebSocketClient","url","IsomorphicWebSocket","wsClient","ReconnectingWebSocket","WebSocket","connected$","BehaviorSubject","Promise","res","onopen","next","onclose","message$","Subject","onmessage","messageObj","message","JSON","parse","data","error$","onerror","err","emitError","newRxError","errors","toArray","map","er","errorToPlainJson","direction","socket","replicateWithWebsocketServer","options","websocketClient","messages$","requestCounter","requestFlag","randomCouchString","getRequestId","count","collection","database","token","replicationState","replicateRxCollection","replicationIdentifier","live","pull","batchSize","stream$","pipe","filter","msg","id","name","result","handler","lastPulledCheckpoint","requestId","request","method","params","send","stringify","firstValueFrom","push","docs","subscribe","subjects","error","isConnected","reSync","streamRequest","onDestroy","close"],"sources":["../../../../src/plugins/replication-websocket/websocket-client.ts"],"sourcesContent":["import {\n    replicateRxCollection,\n    RxReplicationState\n} from '../replication/index.ts';\nimport {\n    WebsocketClientOptions,\n    WebsocketMessageType\n} from './websocket-types.ts';\n\nimport ReconnectingWebSocket from 'reconnecting-websocket';\n\nimport IsomorphicWebSocket from 'isomorphic-ws';\nimport {\n    errorToPlainJson,\n    randomCouchString,\n    toArray\n} from '../../plugins/utils/index.ts';\nimport {\n    filter,\n    map,\n    Subject,\n    firstValueFrom,\n    BehaviorSubject\n} from 'rxjs';\nimport type {\n    RxError,\n    RxReplicationWriteToMasterRow\n} from '../../types/index.d.ts';\nimport { newRxError } from '../../rx-error.ts';\n\nexport type WebsocketClient = {\n    url: string;\n    socket: any;\n    connected$: BehaviorSubject<boolean>;\n    message$: Subject<any>;\n    error$: Subject<RxError>;\n};\n\n\n/**\n * Copied and adapter from the 'reconnecting-websocket' npm module.\n * Some bundlers have problems with bundling the isomorphic-ws plugin\n * so we directly check the correctness in RxDB to ensure that we can\n * throw a helpful error.\n */\nexport function ensureIsWebsocket(w: typeof IsomorphicWebSocket) {\n    const is = typeof w !== 'undefined' && !!w && w.CLOSING === 2;\n    if (!is) {\n        console.dir(w);\n        throw new Error('websocket not valid');\n    }\n}\n\n\nexport async function createWebSocketClient(url: string): Promise<WebsocketClient> {\n    ensureIsWebsocket(IsomorphicWebSocket);\n    const wsClient = new ReconnectingWebSocket(\n        url,\n        [],\n        {\n            WebSocket: IsomorphicWebSocket\n        }\n    );\n\n    const connected$ = new BehaviorSubject<boolean>(false);\n    await new Promise<void>(res => {\n        wsClient.onopen = () => {\n            connected$.next(true);\n            res();\n        };\n    });\n    wsClient.onclose = () => {\n        connected$.next(false);\n    };\n\n    const message$ = new Subject<any>();\n    wsClient.onmessage = (messageObj) => {\n        const message = JSON.parse(messageObj.data);\n        message$.next(message);\n    };\n\n    const error$ = new Subject<any>();\n    wsClient.onerror = (err) => {\n        const emitError = newRxError('RC_STREAM', {\n            errors: toArray(err).map((er: any) => errorToPlainJson(er)),\n            direction: 'pull'\n        });\n        error$.next(emitError);\n    };\n\n\n    return {\n        url,\n        socket: wsClient,\n        connected$,\n        message$,\n        error$\n    };\n\n}\n\nexport async function replicateWithWebsocketServer<RxDocType, CheckpointType>(\n    options: WebsocketClientOptions<RxDocType>\n): Promise<RxReplicationState<RxDocType, CheckpointType>> {\n    const websocketClient = await createWebSocketClient(options.url);\n    const wsClient = websocketClient.socket;\n    const messages$ = websocketClient.message$;\n\n    let requestCounter = 0;\n    const requestFlag = randomCouchString(10);\n    function getRequestId() {\n        const count = requestCounter++;\n        return options.collection.database.token + '|' + requestFlag + '|' + count;\n    }\n    const replicationState = replicateRxCollection<RxDocType, CheckpointType>({\n        collection: options.collection,\n        replicationIdentifier: options.replicationIdentifier,\n        live: options.live,\n        pull: {\n            batchSize: options.batchSize,\n            stream$: messages$.pipe(\n                filter(msg => msg.id === 'stream' && msg.collection === options.collection.name),\n                map(msg => msg.result)\n            ),\n            async handler(lastPulledCheckpoint: CheckpointType | undefined, batchSize: number) {\n                const requestId = getRequestId();\n                const request: WebsocketMessageType = {\n                    id: requestId,\n                    collection: options.collection.name,\n                    method: 'masterChangesSince',\n                    params: [lastPulledCheckpoint, batchSize]\n                };\n                wsClient.send(JSON.stringify(request));\n                const result = await firstValueFrom(\n                    messages$.pipe(\n                        filter(msg => msg.id === requestId),\n                        map(msg => msg.result)\n                    )\n                );\n                return result;\n            }\n        },\n        push: {\n            batchSize: options.batchSize,\n            handler(docs: RxReplicationWriteToMasterRow<RxDocType>[]) {\n                const requestId = getRequestId();\n                const request: WebsocketMessageType = {\n                    id: requestId,\n                    collection: options.collection.name,\n                    method: 'masterWrite',\n                    params: [docs]\n                };\n                wsClient.send(JSON.stringify(request));\n                return firstValueFrom(\n                    messages$.pipe(\n                        filter(msg => msg.id === requestId),\n                        map(msg => msg.result)\n                    )\n                );\n            }\n        }\n    });\n\n    websocketClient.error$.subscribe(err => replicationState.subjects.error.next(err));\n\n    websocketClient.connected$.subscribe(isConnected => {\n        if (isConnected) {\n            /**\n             * When the client goes offline and online again,\n             * we have to send a 'RESYNC' signal because the client\n             * might have missed out events while being offline.\n             */\n            replicationState.reSync();\n\n            /**\n             * Because reconnecting creates a new websocket-instance,\n             * we have to start the changestream from the remote again\n             * each time.\n             */\n            const streamRequest: WebsocketMessageType = {\n                id: 'stream',\n                collection: options.collection.name,\n                method: 'masterChangeStream$',\n                params: []\n            };\n            wsClient.send(JSON.stringify(streamRequest));\n        }\n    });\n\n    options.collection.onDestroy.push(() => websocketClient.socket.close());\n    return replicationState;\n}\n"],"mappings":";;;;;;;;;AAAA,IAAAA,MAAA,GAAAC,OAAA;AASA,IAAAC,sBAAA,GAAAC,sBAAA,CAAAF,OAAA;AAEA,IAAAG,aAAA,GAAAD,sBAAA,CAAAF,OAAA;AACA,IAAAI,OAAA,GAAAJ,OAAA;AAKA,IAAAK,KAAA,GAAAL,OAAA;AAWA,IAAAM,QAAA,GAAAN,OAAA;AAWA;AACA;AACA;AACA;AACA;AACA;AACO,SAASO,iBAAiBA,CAACC,CAA6B,EAAE;EAC7D,IAAMC,EAAE,GAAG,OAAOD,CAAC,KAAK,WAAW,IAAI,CAAC,CAACA,CAAC,IAAIA,CAAC,CAACE,OAAO,KAAK,CAAC;EAC7D,IAAI,CAACD,EAAE,EAAE;IACLE,OAAO,CAACC,GAAG,CAACJ,CAAC,CAAC;IACd,MAAM,IAAIK,KAAK,CAAC,qBAAqB,CAAC;EAC1C;AACJ;AAGO,eAAeC,qBAAqBA,CAACC,GAAW,EAA4B;EAC/ER,iBAAiB,CAACS,qBAAmB,CAAC;EACtC,IAAMC,QAAQ,GAAG,IAAIC,8BAAqB,CACtCH,GAAG,EACH,EAAE,EACF;IACII,SAAS,EAAEH;EACf,CACJ,CAAC;EAED,IAAMI,UAAU,GAAG,IAAIC,qBAAe,CAAU,KAAK,CAAC;EACtD,MAAM,IAAIC,OAAO,CAAOC,GAAG,IAAI;IAC3BN,QAAQ,CAACO,MAAM,GAAG,MAAM;MACpBJ,UAAU,CAACK,IAAI,CAAC,IAAI,CAAC;MACrBF,GAAG,CAAC,CAAC;IACT,CAAC;EACL,CAAC,CAAC;EACFN,QAAQ,CAACS,OAAO,GAAG,MAAM;IACrBN,UAAU,CAACK,IAAI,CAAC,KAAK,CAAC;EAC1B,CAAC;EAED,IAAME,QAAQ,GAAG,IAAIC,aAAO,CAAM,CAAC;EACnCX,QAAQ,CAACY,SAAS,GAAIC,UAAU,IAAK;IACjC,IAAMC,OAAO,GAAGC,IAAI,CAACC,KAAK,CAACH,UAAU,CAACI,IAAI,CAAC;IAC3CP,QAAQ,CAACF,IAAI,CAACM,OAAO,CAAC;EAC1B,CAAC;EAED,IAAMI,MAAM,GAAG,IAAIP,aAAO,CAAM,CAAC;EACjCX,QAAQ,CAACmB,OAAO,GAAIC,GAAG,IAAK;IACxB,IAAMC,SAAS,GAAG,IAAAC,mBAAU,EAAC,WAAW,EAAE;MACtCC,MAAM,EAAE,IAAAC,eAAO,EAACJ,GAAG,CAAC,CAACK,GAAG,CAAEC,EAAO,IAAK,IAAAC,wBAAgB,EAACD,EAAE,CAAC,CAAC;MAC3DE,SAAS,EAAE;IACf,CAAC,CAAC;IACFV,MAAM,CAACV,IAAI,CAACa,SAAS,CAAC;EAC1B,CAAC;EAGD,OAAO;IACHvB,GAAG;IACH+B,MAAM,EAAE7B,QAAQ;IAChBG,UAAU;IACVO,QAAQ;IACRQ;EACJ,CAAC;AAEL;AAEO,eAAeY,4BAA4BA,CAC9CC,OAA0C,EACY;EACtD,IAAMC,eAAe,GAAG,MAAMnC,qBAAqB,CAACkC,OAAO,CAACjC,GAAG,CAAC;EAChE,IAAME,QAAQ,GAAGgC,eAAe,CAACH,MAAM;EACvC,IAAMI,SAAS,GAAGD,eAAe,CAACtB,QAAQ;EAE1C,IAAIwB,cAAc,GAAG,CAAC;EACtB,IAAMC,WAAW,GAAG,IAAAC,yBAAiB,EAAC,EAAE,CAAC;EACzC,SAASC,YAAYA,CAAA,EAAG;IACpB,IAAMC,KAAK,GAAGJ,cAAc,EAAE;IAC9B,OAAOH,OAAO,CAACQ,UAAU,CAACC,QAAQ,CAACC,KAAK,GAAG,GAAG,GAAGN,WAAW,GAAG,GAAG,GAAGG,KAAK;EAC9E;EACA,IAAMI,gBAAgB,GAAG,IAAAC,4BAAqB,EAA4B;IACtEJ,UAAU,EAAER,OAAO,CAACQ,UAAU;IAC9BK,qBAAqB,EAAEb,OAAO,CAACa,qBAAqB;IACpDC,IAAI,EAAEd,OAAO,CAACc,IAAI;IAClBC,IAAI,EAAE;MACFC,SAAS,EAAEhB,OAAO,CAACgB,SAAS;MAC5BC,OAAO,EAAEf,SAAS,CAACgB,IAAI,CACnB,IAAAC,YAAM,EAACC,GAAG,IAAIA,GAAG,CAACC,EAAE,KAAK,QAAQ,IAAID,GAAG,CAACZ,UAAU,KAAKR,OAAO,CAACQ,UAAU,CAACc,IAAI,CAAC,EAChF,IAAA5B,SAAG,EAAC0B,GAAG,IAAIA,GAAG,CAACG,MAAM,CACzB,CAAC;MACD,MAAMC,OAAOA,CAACC,oBAAgD,EAAET,SAAiB,EAAE;QAC/E,IAAMU,SAAS,GAAGpB,YAAY,CAAC,CAAC;QAChC,IAAMqB,OAA6B,GAAG;UAClCN,EAAE,EAAEK,SAAS;UACblB,UAAU,EAAER,OAAO,CAACQ,UAAU,CAACc,IAAI;UACnCM,MAAM,EAAE,oBAAoB;UAC5BC,MAAM,EAAE,CAACJ,oBAAoB,EAAET,SAAS;QAC5C,CAAC;QACD/C,QAAQ,CAAC6D,IAAI,CAAC9C,IAAI,CAAC+C,SAAS,CAACJ,OAAO,CAAC,CAAC;QACtC,IAAMJ,MAAM,GAAG,MAAM,IAAAS,oBAAc,EAC/B9B,SAAS,CAACgB,IAAI,CACV,IAAAC,YAAM,EAACC,GAAG,IAAIA,GAAG,CAACC,EAAE,KAAKK,SAAS,CAAC,EACnC,IAAAhC,SAAG,EAAC0B,GAAG,IAAIA,GAAG,CAACG,MAAM,CACzB,CACJ,CAAC;QACD,OAAOA,MAAM;MACjB;IACJ,CAAC;IACDU,IAAI,EAAE;MACFjB,SAAS,EAAEhB,OAAO,CAACgB,SAAS;MAC5BQ,OAAOA,CAACU,IAAgD,EAAE;QACtD,IAAMR,SAAS,GAAGpB,YAAY,CAAC,CAAC;QAChC,IAAMqB,OAA6B,GAAG;UAClCN,EAAE,EAAEK,SAAS;UACblB,UAAU,EAAER,OAAO,CAACQ,UAAU,CAACc,IAAI;UACnCM,MAAM,EAAE,aAAa;UACrBC,MAAM,EAAE,CAACK,IAAI;QACjB,CAAC;QACDjE,QAAQ,CAAC6D,IAAI,CAAC9C,IAAI,CAAC+C,SAAS,CAACJ,OAAO,CAAC,CAAC;QACtC,OAAO,IAAAK,oBAAc,EACjB9B,SAAS,CAACgB,IAAI,CACV,IAAAC,YAAM,EAACC,GAAG,IAAIA,GAAG,CAACC,EAAE,KAAKK,SAAS,CAAC,EACnC,IAAAhC,SAAG,EAAC0B,GAAG,IAAIA,GAAG,CAACG,MAAM,CACzB,CACJ,CAAC;MACL;IACJ;EACJ,CAAC,CAAC;EAEFtB,eAAe,CAACd,MAAM,CAACgD,SAAS,CAAC9C,GAAG,IAAIsB,gBAAgB,CAACyB,QAAQ,CAACC,KAAK,CAAC5D,IAAI,CAACY,GAAG,CAAC,CAAC;EAElFY,eAAe,CAAC7B,UAAU,CAAC+D,SAAS,CAACG,WAAW,IAAI;IAChD,IAAIA,WAAW,EAAE;MACb;AACZ;AACA;AACA;AACA;MACY3B,gBAAgB,CAAC4B,MAAM,CAAC,CAAC;;MAEzB;AACZ;AACA;AACA;AACA;MACY,IAAMC,aAAmC,GAAG;QACxCnB,EAAE,EAAE,QAAQ;QACZb,UAAU,EAAER,OAAO,CAACQ,UAAU,CAACc,IAAI;QACnCM,MAAM,EAAE,qBAAqB;QAC7BC,MAAM,EAAE;MACZ,CAAC;MACD5D,QAAQ,CAAC6D,IAAI,CAAC9C,IAAI,CAAC+C,SAAS,CAACS,aAAa,CAAC,CAAC;IAChD;EACJ,CAAC,CAAC;EAEFxC,OAAO,CAACQ,UAAU,CAACiC,SAAS,CAACR,IAAI,CAAC,MAAMhC,eAAe,CAACH,MAAM,CAAC4C,KAAK,CAAC,CAAC,CAAC;EACvE,OAAO/B,gBAAgB;AAC3B"}