{"version":3,"file":"index.js","names":["_rxStorageHelper","require","_rxStorageInstanceFoundationdb","_foundationdbTypes","Object","keys","forEach","key","prototype","hasOwnProperty","call","_exportNames","exports","defineProperty","enumerable","get","_foundationdbHelpers","versionSet","getRxStorageFoundationDB","settings","apiVersion","Error","setAPIVersion","storage","name","createStorageInstance","params","ensureRxStorageInstanceParamsAreCorrect","useSettings","assign","options","batchSize","createFoundationDBStorageInstance"],"sources":["../../../../src/plugins/storage-foundationdb/index.ts"],"sourcesContent":["import { ensureRxStorageInstanceParamsAreCorrect } from '../../rx-storage-helper.ts';\nimport type {\n    RxStorageInstanceCreationParams\n} from '../../types/index.d.ts';\nimport type {\n    RxStorageFoundationDB,\n    RxStorageFoundationDBInstanceCreationOptions,\n    RxStorageFoundationDBSettings\n} from './foundationdb-types.ts';\n\nimport {\n    createFoundationDBStorageInstance,\n    RxStorageInstanceFoundationDB\n} from './rx-storage-instance-foundationdb.ts';\n\n\nlet versionSet: undefined | number;\n\nexport function getRxStorageFoundationDB(\n    settings: RxStorageFoundationDBSettings\n): RxStorageFoundationDB {\n    if (versionSet && versionSet !== settings.apiVersion) {\n        throw new Error('foundationdb already initialized with api version ' + versionSet);\n    } else if (!versionSet) {\n        versionSet = settings.apiVersion;\n        const { setAPIVersion } = require('foundationdb');\n        setAPIVersion(settings.apiVersion);\n    }\n\n\n    const storage: RxStorageFoundationDB = {\n        name: 'foundationdb',\n        createStorageInstance<RxDocType>(\n            params: RxStorageInstanceCreationParams<RxDocType, RxStorageFoundationDBInstanceCreationOptions>\n        ): Promise<RxStorageInstanceFoundationDB<RxDocType>> {\n            ensureRxStorageInstanceParamsAreCorrect(params);\n            const useSettings = Object.assign(\n                {},\n                settings,\n                params.options\n            );\n            if (!useSettings.batchSize) {\n                useSettings.batchSize = 50;\n            }\n            return createFoundationDBStorageInstance(this, params, useSettings);\n        }\n    };\n\n    return storage;\n}\n\n\nexport * from './foundationdb-types.ts';\nexport * from './foundationdb-helpers.ts';\n"],"mappings":";;;;;;;;;AAAA,IAAAA,gBAAA,GAAAC,OAAA;AAUA,IAAAC,8BAAA,GAAAD,OAAA;AA0CA,IAAAE,kBAAA,GAAAF,OAAA;AAAAG,MAAA,CAAAC,IAAA,CAAAF,kBAAA,EAAAG,OAAA,WAAAC,GAAA;EAAA,IAAAA,GAAA,kBAAAA,GAAA;EAAA,IAAAH,MAAA,CAAAI,SAAA,CAAAC,cAAA,CAAAC,IAAA,CAAAC,YAAA,EAAAJ,GAAA;EAAA,IAAAA,GAAA,IAAAK,OAAA,IAAAA,OAAA,CAAAL,GAAA,MAAAJ,kBAAA,CAAAI,GAAA;EAAAH,MAAA,CAAAS,cAAA,CAAAD,OAAA,EAAAL,GAAA;IAAAO,UAAA;IAAAC,GAAA,WAAAA,CAAA;MAAA,OAAAZ,kBAAA,CAAAI,GAAA;IAAA;EAAA;AAAA;AACA,IAAAS,oBAAA,GAAAf,OAAA;AAAAG,MAAA,CAAAC,IAAA,CAAAW,oBAAA,EAAAV,OAAA,WAAAC,GAAA;EAAA,IAAAA,GAAA,kBAAAA,GAAA;EAAA,IAAAH,MAAA,CAAAI,SAAA,CAAAC,cAAA,CAAAC,IAAA,CAAAC,YAAA,EAAAJ,GAAA;EAAA,IAAAA,GAAA,IAAAK,OAAA,IAAAA,OAAA,CAAAL,GAAA,MAAAS,oBAAA,CAAAT,GAAA;EAAAH,MAAA,CAAAS,cAAA,CAAAD,OAAA,EAAAL,GAAA;IAAAO,UAAA;IAAAC,GAAA,WAAAA,CAAA;MAAA,OAAAC,oBAAA,CAAAT,GAAA;IAAA;EAAA;AAAA;AArCA,IAAIU,UAA8B;AAE3B,SAASC,wBAAwBA,CACpCC,QAAuC,EAClB;EACrB,IAAIF,UAAU,IAAIA,UAAU,KAAKE,QAAQ,CAACC,UAAU,EAAE;IAClD,MAAM,IAAIC,KAAK,CAAC,oDAAoD,GAAGJ,UAAU,CAAC;EACtF,CAAC,MAAM,IAAI,CAACA,UAAU,EAAE;IACpBA,UAAU,GAAGE,QAAQ,CAACC,UAAU;IAChC,IAAM;MAAEE;IAAc,CAAC,GAAGrB,OAAO,CAAC,cAAc,CAAC;IACjDqB,aAAa,CAACH,QAAQ,CAACC,UAAU,CAAC;EACtC;EAGA,IAAMG,OAA8B,GAAG;IACnCC,IAAI,EAAE,cAAc;IACpBC,qBAAqBA,CACjBC,MAAgG,EAC/C;MACjD,IAAAC,wDAAuC,EAACD,MAAM,CAAC;MAC/C,IAAME,WAAW,GAAGxB,MAAM,CAACyB,MAAM,CAC7B,CAAC,CAAC,EACFV,QAAQ,EACRO,MAAM,CAACI,OACX,CAAC;MACD,IAAI,CAACF,WAAW,CAACG,SAAS,EAAE;QACxBH,WAAW,CAACG,SAAS,GAAG,EAAE;MAC9B;MACA,OAAO,IAAAC,gEAAiC,EAAC,IAAI,EAAEN,MAAM,EAAEE,WAAW,CAAC;IACvE;EACJ,CAAC;EAED,OAAOL,OAAO;AAClB"}