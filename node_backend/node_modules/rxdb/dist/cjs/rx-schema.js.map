{"version":3,"file":"rx-schema.js","names":["_index","require","_rxError","_hooks","_rxSchemaHelper","_overwritable","RxSchema","exports","jsonSchema","hashFunction","indexes","getIndexes","primaryPath","getPrimaryFieldOfPrimaryKey","primaryKey","finalFields","getFinalFields","_proto","prototype","validateChange","dataBefore","dataAfter","forEach","fieldName","deepEqual","newRxError","schema","getDocumentPrototype","proto","pathProperties","getSchemaByObjectPath","Object","keys","key","fullPath","__defineGetter__","get","undefined","ret","defineProperty","get$","enumerable","configurable","populate","overwriteGetterForCaching","getPrimaryOfDocumentData","documentData","getComposedPrimaryKeyOfDocumentData","_createClass2","default","version","values","entries","properties","filter","v","hasOwnProperty","call","k","JSON","stringify","map","index","isMaybeReadonlyArray","getPreviousVersions","c","Array","fill","createRxSchema","runPreCreateHooks","runPluginHooks","useJsonSchema","fillWithDefaultSettings","normalizeRxJsonSchema","overwritable","deepFreezeWhenDevMode","isRxSchema","obj","toTypedRxJsonSchema"],"sources":["../../src/rx-schema.ts"],"sourcesContent":["import {\n    overwriteGetterForCaching,\n    isMaybeReadonlyArray,\n    deepEqual\n} from './plugins/utils/index.ts';\nimport {\n    newRxError,\n} from './rx-error.ts';\nimport {\n    runPluginHooks\n} from './hooks.ts';\n\nimport type {\n    DeepMutable,\n    DeepReadonly,\n    HashFunction,\n    MaybeReadonly,\n    RxDocument,\n    RxDocumentData,\n    RxJsonSchema,\n    StringKeys\n} from './types/index.d.ts';\nimport {\n    fillWithDefaultSettings,\n    getComposedPrimaryKeyOfDocumentData,\n    getFinalFields,\n    getPrimaryFieldOfPrimaryKey,\n    getSchemaByObjectPath,\n    normalizeRxJsonSchema\n} from './rx-schema-helper.ts';\nimport { overwritable } from './overwritable.ts';\n\nexport class RxSchema<RxDocType = any> {\n    public indexes: MaybeReadonly<string[]>[];\n    public readonly primaryPath: StringKeys<RxDocumentData<RxDocType>>;\n    public finalFields: string[];\n\n    constructor(\n        public readonly jsonSchema: RxJsonSchema<RxDocumentData<RxDocType>>,\n        public readonly hashFunction: HashFunction\n    ) {\n        this.indexes = getIndexes(this.jsonSchema);\n\n        // primary is always required\n        this.primaryPath = getPrimaryFieldOfPrimaryKey(this.jsonSchema.primaryKey);\n\n        this.finalFields = getFinalFields(this.jsonSchema);\n    }\n\n    public get version(): number {\n        return this.jsonSchema.version;\n    }\n\n    public get defaultValues(): { [P in keyof RxDocType]: RxDocType[P] } {\n        const values = {} as { [P in keyof RxDocType]: RxDocType[P] };\n        Object\n            .entries(this.jsonSchema.properties)\n            .filter(([, v]) => Object.prototype.hasOwnProperty.call(v, 'default'))\n            .forEach(([k, v]) => (values as any)[k] = (v as any).default);\n        return overwriteGetterForCaching(\n            this,\n            'defaultValues',\n            values\n        );\n    }\n\n    /**\n     * @overrides itself on the first call\n     *\n     * TODO this should be a pure function that\n     * caches the hash in a WeakMap.\n     */\n    public get hash(): Promise<string> {\n        return overwriteGetterForCaching(\n            this,\n            'hash',\n            this.hashFunction(JSON.stringify(this.jsonSchema))\n        );\n    }\n\n    /**\n     * checks if a given change on a document is allowed\n     * Ensures that:\n     * - final fields are not modified\n     * @throws {Error} if not valid\n     */\n    validateChange(dataBefore: any, dataAfter: any): void {\n        this.finalFields.forEach(fieldName => {\n            if (!deepEqual(dataBefore[fieldName], dataAfter[fieldName])) {\n                throw newRxError('DOC9', {\n                    dataBefore,\n                    dataAfter,\n                    fieldName,\n                    schema: this.jsonSchema\n                });\n            }\n        });\n    }\n\n    /**\n     * creates the schema-based document-prototype,\n     * see RxCollection.getDocumentPrototype()\n     */\n    public getDocumentPrototype(): any {\n        const proto: any = {};\n\n        /**\n         * On the top level, we know all keys\n         * and therefore do not have to create a new Proxy object\n         * for each document. Instead we define the getter in the prototype once.\n         */\n        const pathProperties = getSchemaByObjectPath(\n            this.jsonSchema,\n            ''\n        );\n        Object.keys(pathProperties)\n            .forEach(key => {\n                const fullPath = key;\n\n                // getter - value\n                proto.__defineGetter__(\n                    key,\n                    function (this: RxDocument) {\n                        if (!this.get || typeof this.get !== 'function') {\n                            /**\n                             * When an object gets added to the state of a vuejs-component,\n                             * it happens that this getter is called with another scope.\n                             * To prevent errors, we have to return undefined in this case\n                             */\n                            return undefined;\n                        }\n                        const ret = this.get(fullPath);\n                        return ret;\n                    }\n                );\n                // getter - observable$\n                Object.defineProperty(proto, key + '$', {\n                    get: function () {\n                        return this.get$(fullPath);\n                    },\n                    enumerable: false,\n                    configurable: false\n                });\n                // getter - populate_\n                Object.defineProperty(proto, key + '_', {\n                    get: function () {\n                        return this.populate(fullPath);\n                    },\n                    enumerable: false,\n                    configurable: false\n                });\n            });\n\n        overwriteGetterForCaching(\n            this,\n            'getDocumentPrototype',\n            () => proto\n        );\n        return proto;\n    }\n\n\n    getPrimaryOfDocumentData(\n        documentData: Partial<RxDocType>\n    ): string {\n        return getComposedPrimaryKeyOfDocumentData(\n            this.jsonSchema,\n            documentData\n        );\n    }\n}\n\nexport function getIndexes<RxDocType = any>(\n    jsonSchema: RxJsonSchema<RxDocType>\n): MaybeReadonly<string[]>[] {\n    return (jsonSchema.indexes || []).map(index => isMaybeReadonlyArray(index) ? index : [index]);\n}\n\n/**\n * array with previous version-numbers\n */\nexport function getPreviousVersions(schema: RxJsonSchema<any>): number[] {\n    const version = schema.version ? schema.version : 0;\n    let c = 0;\n    return new Array(version)\n        .fill(0)\n        .map(() => c++);\n}\n\nexport function createRxSchema<T>(\n    jsonSchema: RxJsonSchema<T>,\n    hashFunction: HashFunction,\n    runPreCreateHooks = true\n): RxSchema<T> {\n    if (runPreCreateHooks) {\n        runPluginHooks('preCreateRxSchema', jsonSchema);\n    }\n\n    let useJsonSchema = fillWithDefaultSettings(jsonSchema);\n    useJsonSchema = normalizeRxJsonSchema(useJsonSchema);\n    overwritable.deepFreezeWhenDevMode(useJsonSchema);\n\n    const schema = new RxSchema(useJsonSchema, hashFunction);\n    runPluginHooks('createRxSchema', schema);\n    return schema;\n}\n\nexport function isRxSchema(obj: any): boolean {\n    return obj instanceof RxSchema;\n}\n\n/**\n * Used as helper function the generate the document type out of the schema via typescript.\n * @link https://github.com/pubkey/rxdb/discussions/3467\n */\nexport function toTypedRxJsonSchema<T extends DeepReadonly<RxJsonSchema<any>>>(schema: T): DeepMutable<T> {\n    return schema as any;\n}\n"],"mappings":"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"}