{"version":3,"file":"query-builder-from-rx-schema.js","names":["fillUpOptionals","SPACING","ensureNotFalsy","ucfirst","pullQueryBuilderFromRxSchema","collectionName","input","schema","prefixes","ucCollectionName","queryName","pull","outputFields","Object","keys","properties","filter","k","ignoreOutputKeys","includes","checkpointInputName","checkpoint","builder","limit","query","join","checkpointFields","variables","pullStreamBuilderFromRxSchema","headersName","headers","stream","pushQueryBuilderFromRxSchema","push","variableName","pushRow","returnFields","pushRows","sendRows","transformPushDoc","doc","sendDoc","entries","forEach","v","ignoreInputKeys","newRow","newDocumentState","assumedMasterState","undefined"],"sources":["../../../../src/plugins/replication-graphql/query-builder-from-rx-schema.ts"],"sourcesContent":["import {\n    GraphQLSchemaFromRxSchemaInputSingleCollection,\n    fillUpOptionals,\n    Prefixes,\n    SPACING\n} from './graphql-schema-from-rx-schema.ts';\nimport { ensureNotFalsy, ucfirst } from '../../plugins/utils/index.ts';\nimport type {\n    RxGraphQLReplicationPullQueryBuilder,\n    RxGraphQLReplicationPullStreamQueryBuilder,\n    RxGraphQLReplicationPushQueryBuilder,\n    WithDeleted\n} from '../../types/index.d.ts';\n\nexport function pullQueryBuilderFromRxSchema(\n    collectionName: string,\n    input: GraphQLSchemaFromRxSchemaInputSingleCollection,\n): RxGraphQLReplicationPullQueryBuilder<any> {\n    input = fillUpOptionals(input);\n    const schema = input.schema;\n    const prefixes: Prefixes = input.prefixes as any;\n\n    const ucCollectionName = ucfirst(collectionName);\n    const queryName = prefixes.pull + ucCollectionName;\n\n    const outputFields = Object.keys(schema.properties).filter(k => !(input.ignoreOutputKeys as string[]).includes(k));\n    // outputFields.push(input.deletedField);\n\n    const checkpointInputName = ucCollectionName + 'Input' + prefixes.checkpoint;\n\n    const builder: RxGraphQLReplicationPullQueryBuilder<any> = (checkpoint: any, limit: number) => {\n        const query = 'query ' + ucfirst(queryName) + '($checkpoint: ' + checkpointInputName + ', $limit: Int!) {\\n' +\n            SPACING + SPACING + queryName + '(checkpoint: $checkpoint, limit: $limit) {\\n' +\n            SPACING + SPACING + SPACING + 'documents {\\n' +\n            SPACING + SPACING + SPACING + SPACING + outputFields.join('\\n' + SPACING + SPACING + SPACING + SPACING) + '\\n' +\n            SPACING + SPACING + SPACING + '}\\n' +\n            SPACING + SPACING + SPACING + 'checkpoint {\\n' +\n            SPACING + SPACING + SPACING + SPACING + input.checkpointFields.join('\\n' + SPACING + SPACING + SPACING + SPACING) + '\\n' +\n            SPACING + SPACING + SPACING + '}\\n' +\n            SPACING + SPACING + '}\\n' +\n            '}';\n        return {\n            query,\n            variables: {\n                checkpoint,\n                limit\n            }\n        };\n    };\n\n    return builder;\n}\n\nexport function pullStreamBuilderFromRxSchema(\n    collectionName: string,\n    input: GraphQLSchemaFromRxSchemaInputSingleCollection,\n) {\n    input = fillUpOptionals(input);\n    const schema = input.schema;\n    const prefixes: Prefixes = input.prefixes as any;\n\n    const ucCollectionName = ucfirst(collectionName);\n    const outputFields = Object.keys(schema.properties).filter(k => !(input.ignoreOutputKeys as string[]).includes(k));\n\n    const headersName = ucCollectionName + 'Input' + prefixes.headers;\n\n    const query = 'subscription on' + ucfirst(ensureNotFalsy(prefixes.stream)) + '($headers: ' + headersName + ') {\\n' +\n        SPACING + prefixes.stream + ucCollectionName + '(headers: $headers) {\\n' +\n        SPACING + SPACING + SPACING + 'documents {\\n' +\n        SPACING + SPACING + SPACING + SPACING + outputFields.join('\\n' + SPACING + SPACING + SPACING + SPACING) + '\\n' +\n        SPACING + SPACING + SPACING + '}\\n' +\n        SPACING + SPACING + SPACING + 'checkpoint {\\n' +\n        SPACING + SPACING + SPACING + SPACING + input.checkpointFields.join('\\n' + SPACING + SPACING + SPACING + SPACING) + '\\n' +\n        SPACING + SPACING + SPACING + '}\\n' +\n        SPACING + '}' +\n        '}';\n\n    const builder: RxGraphQLReplicationPullStreamQueryBuilder = (headers: any) => {\n        return {\n            query,\n            variables: {\n                headers\n            }\n        };\n    };\n    return builder;\n}\n\n\nexport function pushQueryBuilderFromRxSchema(\n    collectionName: string,\n    input: GraphQLSchemaFromRxSchemaInputSingleCollection\n): RxGraphQLReplicationPushQueryBuilder {\n    input = fillUpOptionals(input);\n    const prefixes: Prefixes = input.prefixes as any;\n\n    const ucCollectionName = ucfirst(collectionName);\n    const queryName = prefixes.push + ucCollectionName;\n\n    const variableName = collectionName + prefixes.pushRow;\n\n\n    const returnFields: string[] = Object.keys(input.schema.properties);\n\n    const builder: RxGraphQLReplicationPushQueryBuilder = (pushRows) => {\n        const query = '' +\n            'mutation ' + prefixes.push + ucCollectionName + '($' + variableName + ': [' + ucCollectionName + 'Input' + prefixes.pushRow + '!]) {\\n' +\n            SPACING + queryName + '(' + variableName + ': $' + variableName + ') {\\n' +\n            SPACING + SPACING + returnFields.join(',\\n' + SPACING + SPACING) + '\\n' +\n            SPACING + '}\\n' +\n            '}';\n\n        const sendRows: typeof pushRows = [];\n        function transformPushDoc(doc: WithDeleted<any>) {\n            const sendDoc: any = {};\n            Object.entries(doc).forEach(([k, v]) => {\n                if (\n                    // skip if in ignoreInputKeys list\n                    !(input.ignoreInputKeys as string[]).includes(k) &&\n                    // only use properties that are in the schema\n                    input.schema.properties[k]\n                ) {\n                    sendDoc[k] = v;\n                }\n            });\n            return sendDoc;\n        }\n        pushRows.forEach(pushRow => {\n            const newRow: typeof pushRow = {\n                newDocumentState: transformPushDoc(pushRow.newDocumentState),\n                assumedMasterState: pushRow.assumedMasterState ? transformPushDoc(pushRow.assumedMasterState) : undefined\n            };\n            sendRows.push(newRow);\n        });\n        const variables = {\n            [variableName]: sendRows\n        };\n        return {\n            query,\n            variables\n        };\n    };\n\n    return builder;\n}\n"],"mappings":"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"}